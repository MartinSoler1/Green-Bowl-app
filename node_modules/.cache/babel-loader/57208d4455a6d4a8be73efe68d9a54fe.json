{"ast":null,"code":"var _jsxFileName = \"/Users/martin/Desktop/Projects/foodorderapp/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Checkout.module.css\";\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    adress: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const adressInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredAdress = adressInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredAdressIsValid = !isEmpty(enteredAdress);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = !isEmpty(enteredPostalCode);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      adress: enteredAdressIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredAdressIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      adress: enteredAdress,\n      postalCode: enteredPostalCode,\n      city: enteredCity\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`;\n  const adressControlClasses = `${classes.control} ${formInputsValidity.adress ? \"\" : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? \"\" : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        \"data-test\": \"checkout-title-name\",\n        children: \"Full Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef,\n        \"data-test\": \"checkout-input-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: adressControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"adress\",\n        ref: adressInputRef,\n        \"data-test\": \"checkout-input-address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), !formInputsValidity.adress && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid address!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"postal\",\n        ref: postalCodeInputRef,\n        \"data-test\": \"checkout-input-postcode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef,\n        \"data-test\": \"checkout-input-city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid city!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        \"data-test\": \"checkout-confirm-button\",\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"pBN9rk/IKpuTxCS4qDOAETZmCHc=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useRef","useState","isEmpty","value","trim","Checkout","props","formInputsValidity","setFormInputsValidity","name","adress","city","postalCode","nameInputRef","adressInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredAdress","enteredPostalCode","enteredCity","enteredNameIsValid","enteredAdressIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","adressControlClasses","postalCodeControlClasses","cityControlClasses","form","actions","onCancel","submit"],"sources":["/Users/martin/Desktop/Projects/foodorderapp/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from \"./Checkout.module.css\";\nimport { useRef, useState } from \"react\";\n\nconst isEmpty = (value) => value.trim() === \"\";\n\nconst Checkout = (props) => {\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    adress: true,\n    city: true,\n    postalCode: true,\n  });\n\n  const nameInputRef = useRef();\n  const adressInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredAdress = adressInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredAdressIsValid = !isEmpty(enteredAdress);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = !isEmpty(enteredPostalCode);\n\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      adress: enteredAdressIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid,\n    });\n\n    const formIsValid =\n      enteredNameIsValid &&\n      enteredAdressIsValid &&\n      enteredCityIsValid &&\n      enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      adress: enteredAdress,\n      postalCode: enteredPostalCode,\n      city: enteredCity,\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${\n    formInputsValidity.name ? \"\" : classes.invalid\n  }`;\n  const adressControlClasses = `${classes.control} ${\n    formInputsValidity.adress ? \"\" : classes.invalid\n  }`;\n  const postalCodeControlClasses = `${classes.control} ${\n    formInputsValidity.postalCode ? \"\" : classes.invalid\n  }`;\n  const cityControlClasses = `${classes.control} ${\n    formInputsValidity.city ? \"\" : classes.invalid\n  }`;\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor=\"name\" data-test=\"checkout-title-name\">\n          Full Name\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          ref={nameInputRef}\n          data-test=\"checkout-input-name\"\n        />\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\n      </div>\n      <div className={adressControlClasses}>\n        <label htmlFor=\"address\">Address</label>\n        <input\n          type=\"text\"\n          id=\"adress\"\n          ref={adressInputRef}\n          data-test=\"checkout-input-address\"\n        />\n        {!formInputsValidity.adress && <p>Please enter a valid address!</p>}\n      </div>\n      <div className={postalCodeControlClasses}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input\n          type=\"number\"\n          id=\"postal\"\n          ref={postalCodeInputRef}\n          data-test=\"checkout-input-postcode\"\n        />\n        {!formInputsValidity.postalCode && (\n          <p>Please enter a valid postal code!</p>\n        )}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor=\"city\">City</label>\n        <input\n          type=\"text\"\n          id=\"city\"\n          ref={cityInputRef}\n          data-test=\"checkout-input-city\"\n        />\n      </div>\n      {!formInputsValidity.city && <p>Please enter a valid city!</p>}\n\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit} data-test=\"checkout-confirm-button\">\n          Confirm\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}