{"ast":null,"code":"var _jsxFileName = \"/Users/martin/Desktop/Projects/foodorderapp/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Checkout.module.css\";\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    adress: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const adressInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredAdress = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredAdressIsValid = !isEmpty(enteredAdress);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = !isEmpty(enteredPostalCode);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredAdressIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredAdressIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Full Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"adress\",\n        children: \"Adress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"adress\",\n        ref: adressInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), !formInputValidity.adress && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid adress!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), !formInputValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid city!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"KVyZqLDz3BAwT67Oj/aWiLAVc2M=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useRef","useState","Checkout","props","formInputsValidity","setFormInputsValidity","name","adress","city","postalCode","nameInputRef","adressInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","value","enteredAdress","streetInputRef","enteredPostalCode","enteredCity","enteredNameIsValid","isEmpty","enteredAdressIsValid","enteredCityIsValid","enteredPostalCodeIsValid","street","formIsValid","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","form","formInputValidity","postal","actions","onCancel","submit"],"sources":["/Users/martin/Desktop/Projects/foodorderapp/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from \"./Checkout.module.css\";\nimport { useRef, useState } from \"react\";\n\nconst Checkout = (props) => {\n    const [formInputsValidity, setFormInputsValidity] = useState({\n        name: true,\n        adress: true,\n        city: true,\n        postalCode: true,\n      });\n    \n      const nameInputRef = useRef();\n      const adressInputRef = useRef();\n      const postalCodeInputRef = useRef();\n      const cityInputRef = useRef();\n    \n      const confirmHandler = (event) => {\n        event.preventDefault();\n    \n        const enteredName = nameInputRef.current.value;\n        const enteredAdress= streetInputRef.current.value;\n        const enteredPostalCode = postalCodeInputRef.current.value;\n        const enteredCity = cityInputRef.current.value;\n    \n        const enteredNameIsValid = !isEmpty(enteredName);\n        const enteredAdressIsValid = !isEmpty(enteredAdress);\n        const enteredCityIsValid = !isEmpty(enteredCity);\n        const enteredPostalCodeIsValid = !isEmpty(enteredPostalCode);\n    \n        setFormInputsValidity({\n          name: enteredNameIsValid,\n          street: enteredAdressIsValid,\n          city: enteredCityIsValid,\n          postalCode: enteredPostalCodeIsValid,\n        });\n    \n        const formIsValid =\n          enteredNameIsValid &&\n          enteredAdressIsValid &&\n          enteredCityIsValid &&\n          enteredPostalCodeIsValid;\n    \n        if (!formIsValid) {\n          return;\n        }\n    \n      };\n    \n      const nameControlClasses = `${classes.control} ${\n        formInputsValidity.name ? '' : classes.invalid\n      }`;\n      const streetControlClasses = `${classes.control} ${\n        formInputsValidity.street ? '' : classes.invalid\n      }`;\n      const postalCodeControlClasses = `${classes.control} ${\n        formInputsValidity.postalCode ? '' : classes.invalid\n      }`;\n      const cityControlClasses = `${classes.control} ${\n        formInputsValidity.city ? '' : classes.invalid\n      }`;\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"name\">Full Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formInputValidity.name && <p>Please enter a valid name!</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"adress\">Adress</label>\n        <input type=\"text\" id=\"adress\" ref={adressInputRef} />\n        {!formInputValidity.adress && <p>Please enter a valid adress!</p>}\n\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\n        {!formInputValidity.postal && <p>Please enter a valid postal code!</p>}\n\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n      </div>\n      {!formInputValidity.city && <p>Please enter a valid city!</p>}\n\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}